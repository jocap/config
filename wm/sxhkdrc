# vi: ft=sh

#
# wm independent hotkeys
#

# terminal emulator in same directory if possible
super + Return
	([ "$(bspc query -T -n | jq -r .client.className)" = URxvt ] && eval urxvtc -cd $(esc "$(xtitle)") || urxvtc) \
	&& pointerfollow

# terminal emulator
super + shift + Return
	urxvtc && pointerfollow

# program launcher
super + space
	dmenu_run

# reset volume
alt + F4
	setvolume 128

# lower / raise volume
alt + {F5,F6}
	setvolume {-,+}10

# lower / raise volume a little
alt + {F7,F8}
	setvolume {-,+}2

# switch keyboard layout
alt + {F1,F2,F3}
	lang={us,se,ru}; setlang $lang && setwinlang $lang

# sxhkd hotkey help
super + F1
	urxvtc -geometry 120x30 -name sxhkd_hotkeys -e /home/john/dev/config/wm/hotkeys.sh && pointerfollow

#
# display
#

# reset screen temperature
alt + F9
	sct

# warm screen temperature
alt + {F10,F11}
	sct {4500,3500}

# toggle laptop display
alt + {F12,shift + F12}
	xrandr --auto && xrandr --output eDP-1 --{auto,off}

#
# mouse
#

# set mouse sensitivity
super + {s,shift + s}
	sensitivity {1,0.5}

# move pointer to focused node
super + a
	pointerfollow

#
# bspwm hotkeys
#

# quit bspwm normally
super + alt + Escape
	kill $(cat /tmp/panel_pid) && rm /tmp/panel_pid; bspc quit

# close / kill
super + {_,shift + }w
	bspc node -{c,k} && pointerfollow

# alternate between the tiled and monocle layout
super + z
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node -n newest.!automatic.local

# send the newest marked node to the newest preselected node (with pointer)
super + button2
	bspc node -n newest.!automatic.local

# swap the current node and the biggest node
super + g
	bspc node -s biggest.local

# insert recepticle
super + r
	bspc node -i

# remove all recepticles
super + shift + r
	for i in $(bspc query -N -n .leaf.!window.local); do bspc node $i -k; done

#
# state/flags
#

# set the window state (tiled, pseudo, floating, fullscreen)
super + {x,c,v,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags (marked, locked, sticky, private)
# super + ctrl + {m,x,y,z}
# 	bspc node -g {marked,locked,sticky,private}

# hide node
super + q
	bspc node -g hidden

# unhide all nodes
super + shift + q
	for i in $(bspc query -N -n .hidden); do bspc node $i -g hidden=off; done

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east} && pointerfollow

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second} && pointerfollow

# focus the next/previous node in the current desktop
super + {_,shift + }n
	bspc node -f {next,prev}.local && pointerfollow

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local && pointerfollow

# focus the last desktop
super + grave
	bspc desktop -f last && pointerfollow

# focus the last node in the other desktop
super + Tab
	bspc node -f last.!local && pointerfollow

# focus the last node in the current desktop
super + semicolon
	bspc node -f last.local && pointerfollow

# focus the last node in the current desktop
alt + Tab
	bspc node -f last.local && pointerfollow

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on && pointerfollow

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}' && pointerfollow

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the direction (with pointer)
super + {button8,button5,button4,button9}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

#
# config
#

# open next node with spiral insertion scheme
super + s
	bspc config automatic_scheme spiral && \
	bspc subscribe node_add | while read; do \
		bspc config automatic_scheme longest_side && break; \
	done
