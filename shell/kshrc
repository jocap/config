# vi: ft=sh

alias __A=`echo "\020"` # up arrow = ^p = back a command
alias __B=`echo "\016"` # down arrow = ^n = down a command
alias __C=`echo "\006"` # right arrow = ^f = forward a character
alias __D=`echo "\002"` # left arrow = ^b = back a character
alias __H=`echo "\001"` # home = ^a = start of line
alias __Y=`echo "\005"` # end = ^e = end of line

# ----------------------------------------------------------------------
# basic
# ----------------------------------------------------------------------

stty dsusp undef # i use ^Z instead of ^Y

HISTFILE="$HOME/.ksh_history"
HISTSIZE=5000

# \[ ... \] is not conuted
PS1='\[\e]2;$PWD\a\]' # set title to pwd
PS1=$PS1'\[\e[37m\]' # gray
PS1=$PS1'\w' # pwd
PS1=$PS1'\[\e[0;0m\]' # reset
PS1=$PS1' $ '

# ----------------------------------------------------------------------
# shortcuts
# ----------------------------------------------------------------------

d=~/dev
c=~/dev/cfg

cb=$c/wm/bspwmrc
cs=$c/wm/sxhkdrc

# ----------------------------------------------------------------------
# preferences
# ----------------------------------------------------------------------

PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/X11R6/bin:/usr/local/bin:/usr/local/sbin:/usr/games
PATH=$HOME/bin:$PATH
export PATH

export EDITOR=vise
export FCEDIT=$EDITOR
export PAGER='less -c'
export BROWSER=firefox

export MOZ_ACCELERATED=1 # make firefox render quickly

export GROFF_TMAC_PATH=$HOME/.tmac

export PARINIT='rTbgqR B=.,?_A_a Q=_s>|'

export FFF_CD_FILE=$HOME/.fff_d
export FFF_ERROR_ON_SIGINT=1
export FFF_SET_TITLE=1
export FFF_COL2=7

bind '^L'=clear-screen
bind -m '^[l'='^Uls^J'
bind -m '^\'='^Adoas ^E'     # add doas
bind -m '^[\'='^A^[d^[[3~^E' # remove doas (or any first word)

alias ls='colorls -G'
alias tree='colortree -C'
alias f='fff && cd $(cat $HOME/.fff_d)'
alias ms='mbsync mailbox'

set -o emacs

# ----------------------------------------------------------------------
# custom functions
# ----------------------------------------------------------------------

function cd {
	old=$PWD

	if [[ $# -eq 1 ]]; then
		local dir=$1
		if [[ ! -d $dir && -e $dir ]]; then
			echo "$dir is a file. Changing to parent." 1>&2
			dir=$(dirname "$dir")
		fi
		\builtin cd "$dir"
	else
		\builtin cd "$@"
	fi

	[[ $old != $PWD ]] && ls

	complete_make
}

# automatically cd to last opened directory in lf:

function lf {
	tmp=$(mktemp)
	env lf -last-dir-path="$tmp" "$@"
	[[ -f $tmp ]] || return 1
	dir=$(cat "$tmp")
	rm -f "$tmp"
	[[ -d $dir ]] || return 1
	[[ $dir != $(pwd) ]] && cd "$dir"
}

# parent make:

function pmake {
	[[ $PWD = / ]] && { echo already at / 1>&2; return 1; }

	local makefile=
	[[ -e Makefile ]] && local makefile=Makefile
	[[ -e makefile ]] && local makefile=makefile
	[[ -e GNUmakefile ]] && local makefile=GNUmakefile

	if [[ ! -z $makefile ]]; then
		[[ $makefile = GNUmakefile ]] && gmake || make
	else
		local dir=$PWD
		\builtin cd ..
		pmake
		\builtin cd "$dir"
	fi
}

# ----------------------------------------------------------------------
# completion
# ----------------------------------------------------------------------

set -A complete_git -- status commit push log diff

set -A complete_rcctl_1 -- disable enable restart start stop
set -A complete_rcctl_2 -- $(ls /etc/rc.d/)

if [[ -e ~/.ssh/config ]]; then
	set -A complete_ssh -- $(awk ' /^Host/ {print $NF}' ~/.ssh/config)
fi

function complete_make {
	unset complete_gmake
	unset complete_make

	local makefile=
	[[ -e Makefile ]] && local makefile=Makefile
	[[ -e makefile ]] && local makefile=makefile
	[[ -e GNUmakefile ]] && local makefile=GNUmakefile

	if [[ ! -z $makefile ]]; then
		targets=$(cat $makefile | egrep "^[[:alnum:][:punct:]]{0,}:[[:space:]]{0,}[[:alnum:][:punct:][:space:]]{0,}$" | sed 's/:.*//')
		set -A complete_gmake -- $targets
		[[ $makefile = GNUmakefile ]] || set -A complete_make -- $targets
	fi
}
complete_make
